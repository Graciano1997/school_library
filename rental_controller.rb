require_relative 'rental'

class RentalController
  def create_rental(storage)
    puts ' '
    puts '_________________RENTING A BOOK ğŸ‘¨ğŸ’³ _________________________'
    puts 'Select a book ğŸ“– from the following list by number'
    storage.books.each do |bookitem|
      puts "#{storage.books.index(bookitem)}) Title: #{bookitem.title}  Author: #{bookitem.author} ğŸ“–ğŸ“˜"
    end
    book_number = gets.chomp.to_i
    puts 'Select a person ğŸ‘¨ from the following list by number (not id)'
    storage.people.each do |person|
      category = if person.respond_to?(:specialization)
                   'Teacher'
                 else
                   'Student'
                 end
      puts "#{storage.people.index(person)}) [#{category}] Name: #{person.name}, ID: #{person.id} Age: #{person.age} ğŸ‘¨"
    end
    person_number = gets.chomp.to_i
    puts 'Date:  eg:2023/04/07 ğŸ“…ğŸ“…'
    date_of_rent = gets.chomp
    rent = Rental.new(date_of_rent, @books[book_number], @people[person_number])
    storage.rentals << rent unless storage.rentals.include?(rent)
    puts 'Rental created successfully ğŸ‘¨ğŸ’³'
    puts '__________________________________________'
  end

  def list_all_rentals(storage)
    puts ' '
    puts '_________________ALL THE RENTALS FOR A SPECIFIC PERSON ğŸ‘¨ğŸ’³ _________________________'
    puts ' '
    puts ' ğŸ†” of Person: ğŸ‘¨'
    person_id = gets.chomp.to_i

    storage.each do |rent|
      puts "ğŸ“… Date: #{rent.date} ğŸ“– Book: #{rent.book.title} by #{rent.book.author} ğŸ‘¨" if rent.person.id == person_id
      puts 'No Rental data was found for this ğŸ†”' if rent.person.id != person_id
    end
    puts '__________________________________________'
  end
end
